// Generated by CoffeeScript 1.10.0
var a, aspectratio, b, background, contrast, deg2rad, gab_x, gab_y, gridArray, gs, i, j, m, meshgrid, multConst, p, phase, preSinWave, ref, reso, sc, sf, sinWave, the_image, tilt, varScale, x, x_centered, x_factor, y, y_centered, y_factor;

reso = 20;

phase = 0;

sc = 50.0;

contrast = 100.0;

aspectratio = 1.0;

tilt = 0;

sf = .07;

deg2rad = function(degrees) {
  return degrees * math.pi / 180;
};

meshgrid = function(value) {
  var i, m, value_length;
  m = [];
  value_length = value.length;
  i = 0;
  while (i < value_length) {
    m.push(value);
    i += 1;
  }
  return [m, math.transpose(m)];
};

x = reso / 2;

y = reso / 2;

a = math.cos(math.unit(tilt, 'deg')) * sf * 360;

b = math.sin(math.unit(tilt, 'deg')) * sf * 360;

multConst = 1 / (math.sqrt(2 * math.pi) * sc);

varScale = 2 * math.pow(sc, 2);

gridArray = math.range(0, reso)._data;

ref = meshgrid(gridArray), gab_x = ref[0], gab_y = ref[1];

x_centered = math.subtract(gab_x, x);

y_centered = math.subtract(gab_y, y);

x_factor = math.multiply(math.square(x_centered), -1);

y_factor = math.multiply(math.square(y_centered), -1);

preSinWave = math.add(math.add(math.multiply(a, x_centered), math.multiply(b, y_centered)), phase);

sinWave = math.sin(math.map(preSinWave, function(value) {
  return math.unit(value, 'deg').value;
}));

m = math.add(.5, math.multiply(contrast, math.transpose(math.dotMultiply(math.multiply(multConst, math.exp(math.add(math.divide(x_factor, varScale), math.divide(y_factor, varScale)))), sinWave))));

gs = 128;

p = new PNGlib(reso, reso, 8);

background = p.color(0, 0, 0, 0);

i = 0;

while (i < reso) {
  j = 0;
  while (j < reso) {
    p.buffer[p.index(i, j)] = p.color(gs, gs, gs);
    j++;
  }
  i++;
}

the_image = '<img src="data:image/png;base64,' + p.getBase64() + '">';

$('#gab-target').html(the_image);
