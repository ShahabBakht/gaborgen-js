// Generated by CoffeeScript 1.10.0
(function() {
  var all_trials, debrief_block, experiment_blocks, getSubjectData, instructions_block, post_trial_gap, psiturk, test_block, test_stimuli, welcome_block;

  psiturk = new PsiTurk(uniqueId, adServerLoc, mode);

  welcome_block = {
    type: "text",
    text: "Welcome to the experiment. Press any key to begin."
  };

  instructions_block = {
    type: "text",
    text: "<p>In this experiment, a circle will appear in the center of the screen.</p> <p>If the circle is <strong>blue</strong>, press the letter F on the keyboard as fast as you can.</p> <p>If the circle is <strong>orange</strong>, do not press any key.</p> <div class='left center-content'> <img src='/static/images/blue.png'></img> <p class='small'><strong>Press the F key</strong></p> </div> <div class='right center-content'> <img src='/static/images/orange.png'></img> <p class='small'><strong>Do not press a key</strong></p> </div> <p>Press any key to begin.</p>",
    timing_post_trial: 2000
  };

  test_stimuli = [
    {
      stimulus: "/static/images/blue.png",
      data: {
        response: "go"
      }
    }, {
      stimulus: "/static/images/orange.png",
      data: {
        response: "no-go"
      }
    }
  ];

  all_trials = jsPsych.randomization.repeat(test_stimuli, 5);

  post_trial_gap = function() {
    return Math.floor(Math.random() * 1500) + 750;
  };

  test_block = {
    type: "single-stim",
    choices: ['F'],
    timing_response: 1500,
    timing_post_trial: post_trial_gap,
    on_finish: function(data) {
      var correct;
      correct = false;
      if (data.response === 'go' && data.rt > -1) {
        correct = true;
      }
      if (data.response === 'no-go' && data.rt === -1) {
        correct = true;
      }
      jsPsych.data.addDataToLastTrial({
        correct: correct
      });
      psiturk.recordTrialData(jsPsych.data.getLastTrialData());
      psiturk.saveData();
    },
    timeline: all_trials
  };

  debrief_block = {
    type: 'text',
    text: function() {
      var subject_data;
      subject_data = getSubjectData();
      return '<p>You responded correctly on ' + subject_data.accuracy + '% of ' + 'the trials.</p> <p>Your average response time was <strong>' + subject_data.rt + 'ms</strong>. Press any key to complete the ' + 'experiment. Thank you!</p>';
    }
  };

  getSubjectData = function() {
    var correct_rt_count, correct_trial_count, i, sum_rt, trials;
    trials = jsPsych.data.getTrialsOfType('single-stim');
    sum_rt = 0;
    correct_trial_count = 0;
    correct_rt_count = 0;
    i = 0;
    while (i < trials.length) {
      if (trials[i].correct === true) {
        correct_trial_count++;
        if (trials[i].rt > -1) {
          sum_rt += trials[i].rt;
          correct_rt_count++;
        }
      }
      i++;
    }
    return {
      rt: Math.floor(sum_rt / correct_rt_count),
      accuracy: Math.floor(correct_trial_count / trials.length * 100)
    };
  };

  experiment_blocks = [welcome_block, instructions_block, test_block, debrief_block];

  jsPsych.init({
    display_element: $('#jspsych-target'),
    timeline: experiment_blocks,
    on_finish: function() {
      psiturk.saveData({
        success: function() {
          psiturk.completeHIT();
        }
      });
    }
  });

}).call(this);
